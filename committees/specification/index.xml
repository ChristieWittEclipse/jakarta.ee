<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Specifications Committee on Jakarta® EE: The New Home of Cloud Native Java</title><link>https://jakarta.ee/committees/specification/</link><description>Recent content in Specifications Committee on Jakarta® EE: The New Home of Cloud Native Java</description><generator>Hugo -- gohugo.io</generator><managingEditor>webdev@eclipse-foundation.org (Christopher Guindon)</managingEditor><webMaster>webdev@eclipse-foundation.org (Christopher Guindon)</webMaster><lastBuildDate>Sun, 05 Jan 2020 15:50:25 -0400</lastBuildDate><atom:link href="https://jakarta.ee/committees/specification/index.xml" rel="self" type="application/rss+xml"/><item><title>Jakarta EE Specification Committee Operation</title><link>https://jakarta.ee/committees/specification/operations/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>webdev@eclipse-foundation.org (Christopher Guindon)</author><guid>https://jakarta.ee/committees/specification/operations/</guid><description>This document describes the practices of the Jakarta EE Specification Committee.
Changes to this document must be approved by a simple majority vote of the Jakarta EE specification committee, conducted via the public Jakarta EE Specification Committee (jakarta.ee-spec@eclipse.org) mailing list.
This is a public document.
Specification Committee The Jakarta EE Specification Committee is responsible for implementing the Eclipse Foundation Specification Process (EFSP) for all Specification Projects (as that term is defined by the EFSP) under the purview of the Jakarta EE Working Group.</description></item><item><title>Jakarta EE TCK Process 1.0</title><link>https://jakarta.ee/committees/specification/tckprocess/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><author>webdev@eclipse-foundation.org (Christopher Guindon)</author><guid>https://jakarta.ee/committees/specification/tckprocess/</guid><description>Specification Projects under the Eclipse Foundation Specification Process MUST produce a Technology Compatibility Kit (TCK) that delivers on the promise of enabling multiple compatible implementations.
This document defines:
Materials a TCK MUST possess to be considered suitable for delivering portability
Process for challenging tests and how these challenges are resolved
Means of excluding released TCK tests from certification requirements
Policy on improving TCK tests for released specifications</description></item></channel></rss>